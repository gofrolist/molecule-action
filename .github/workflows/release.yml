---
name: Release

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/dependabot.yml'
  schedule:
    # every Saturday
    - cron: '0 0 * * 6'
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: gofrolist/molecule

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Build Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          load: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/test.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: testimage
          path: /tmp/test.tar

  molecule:
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: testimage
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/test.tar
          docker image ls -a

      - name: Test run Molecule
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:test molecule --version

  snyk-docker:
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: testimage
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/test.tar
          docker image ls -a

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.DOCKER_IMAGE_NAME }}:test
          sarif: true
          args: --file=Dockerfile

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  snyk-python:
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Run Snyk to check for Python vulnerabilities
        continue-on-error: true
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk-python.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk-python.sarif

  release:
    needs:
      - build
      - molecule
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: npx semantic-release -p @semantic-release/commit-analyzer -p @semantic-release/release-notes-generator -p @semantic-release/github
